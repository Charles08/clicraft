clicraft(1)
===========

Name
----
clicraft - command-line minecraft server wrapper

Synopsis
--------
'clicraft' <action> [args]

Description
-----------
Clicraft is a command-line wrapper for operation and administration of a
minecraft-compatible server. It is written in linkman:bash[1] and uses
linkman:tmux[1] or linkman:screen[1] to daemonize and communicate with the
server process.

The 'action' is an action to perform on the server, such as starting it,
stopping it, or sending a command to the server console. Actions are
implemented with action scripts, which can be provided by the clicraft package
or written by the user. For more information on writing action scripts, see
linkman:clicraft-actions[5]. The actions that ship with a typical clicraft
install are described below.

Actions
-------

*cmd* [-v|--verbose] [-q|--quiet] <command>::
	Sends 'command' to the server console. If clicraft recognizes 'command',
	it will wait until the command finishes or +TIMEOUT+ seconds, whichever
	comes first, before returning. Any leading occurences of +CMD_LSTRIP+ are
	removed from the beginning of 'command' before being sent to the server
	console.
+
With +-v+ or +--verbose+, print +SERVER_LOG+ to stdout. If clicraft recognizes
the command, it will attempt to print until the command finishes. Otherwise,
it will print for 2 seconds.
+
With +-q+ or +--quiet+, suppress +-v+ output.
+
See linkman:clicraft.conf[5] for a description of the +TIMEOUT+ or
+CMD_LSTRIP+ options.

*console*::
	Attach to the server console. This places you in the multiplexer shell
	session that the server is running in. All normal multiplexer key-bindings
	(like `Ctrl-b d` or `Ctrl-a d` to detach) should work.

*dl* [version]::
	Downloads version 'version' of the server jar file. If 'version' is
	+release+ or +snapshot+, the latest release or snapshot version is used.
	If no 'version' is supplied on the command line, use `SERVER_VERSION`
	instead.
+
The jar file is downloaded from `SERVER_URL` and saved to location
`SERVER_JAR` using `DOWNLOAD_COMMAND`. Any instances of the string +%v+ in
`DOWNLOAD_COMMAND` are substituted with 'version'.
+
If `SERVER_JAR` already
exists, it is backed up to `SERVER_JAR.ccback` before being overwritten, and
restored from `SERVER_JAR.ccback` if the download fails.
+
For information regarding `SERVER_VERSION`, `SERVER_URL`, `SERVER_JAR`, and
`DOWNLOAD_COMMAND`. see linkman:clicraft.conf[5].

*edit* [file|action]::
	Edit 'file' in the server directory.
+
If <file> does not exist and has a .dat extension, and if vinbt is installed,
edit the first file of that name found anywhere within the world directory
using vinbt.
+
Otherwise,
edit the action script for 'action' instead. When editing a new action or
overriding a system action, clicraft will create a new user action using one
of these templates:
+
* {CONFDIR}/action.d/action.sh.example
* {CONFDIR}/action.d/action-override.sh.example

+
When no 'file' or 'action' is present, edit linkman:clicraft.conf[5].
+
This usage of clicraft launches `EDITOR` to edit files, or linkman:vi[1] if
the `EDITOR` variable is not defined in your environment.

*explore* <size> [x z]::
	Generates a world roughly 'size' by 'size' centered on coordinates
	'x' and 'z' (spawn by default) using linkman:mcexplore[1].
+
Using this action is equivalent to running
+mcexplore -p SERVER_DIR -c START_COMMAND -x 'x' -z 'z' 'size'+.
For information regarding `SERVER_DIR` and `START_COMMAND`, see
linkman:clicraft.conf[5].
+
NOTE: This action is only available if clicraft was built using
`--with-mcexplore`.

*help* [action]::
	Displays usage information for 'action'. If no 'action' is given, clicraft
	usage is displayed instead.

*map* [args]::
	Maps the world using linkman:c10t[1]. Any additional 'args' get passed to
	`c10t`, which must be in your `PATH`. For valid 'args', see `c10t --help`.
+
With a default install of minecraft, using this action is equivalent to
running +c10t -w SERVER_DIR/'world' -o $HOME/maps/'world'-'date'.png ['args']+,
where +'date'+ is today's
date in YYYY-MM-DD format and +'world'+ is the value of +level-name+ in
+server.properties+. For information regarding `SERVER_DIR`, see
linkman:clicraft.conf[5]. If the `$HOME/maps` directory does not exist, it is
created.
+
NOTE: This action is only available if clicraft was built using `--with-c10t`.

*redb* [operation] [args]::
	Manipulate the regex database. Exact usage depends on 'operation':
+
*redb* lookup <key>:::
	Prints the regex for 'key' from the regex database. If a regex for 'key'
	does not exist, returns a nonzero exit status.
+
*redb* insert <key> <value>:::
	Inserts a new 'key' and 'value' into the regex database. If a regex for
	'key' already exists, returns a nonzero exit status.
+
*redb* update <key> <value>:::
	Changes the regex for 'key' to 'value' in the regex database. If a regex
	for 'key' does not exist, returns a nonzero exit status.
+
*redb* delete <key>:::
	Deletes the regex for 'key' from the regex database. If a regex for 'key'
	does not exist, returns a nonzero exit status.

+
If no 'operation' or 'args' are supplied, they are read from stdin.

*restart*::
	Restarts the server.

*sh* [command]::
	Evaluate 'command' within clicraft's environment.
+
If no 'command' is given, open an interactive bash session with an environment
that mimics clicraft's.

*start*::
	Starts the server.

*status*::
	Reports on whether the server is running or not. If the server
	is not running, returns a nonzero exit status.

*stop*::
	Stops the server.

*version*::
	Prints version information.

Examples
--------

clicraft cmd save-off::
	Prepare for a backup by disabling writes to the world files.

clicraft cmd save-on::
	Re-enable writes to the world files.

clicraft edit server.properties::
	Edit the server properties file.

clicraft explore 10 20 -x 500 -z 500::
	Generate a 160x320 region (10 by 20 chunks) centered on (x=500, z=500).

clicraft map -R 250 -r 270::
	Generate a map centered on spawn out to a radius of 250 chunks, and rotate
	it 270 degrees.

Configuration
-------------

See linkman:clicraft.conf[5] for details on configuring clicraft and
linkman:clicraft-actions[5] for writing custom action scripts.

See Also
--------

linkman:clicraft.conf[5], linkman:clicraft-actions[5], linkman:tmux[1],
linkman:screen[1], linkman:mcexplore[1], linkman:c10t[1]

include::footer.txt[]

/////
vim: set syntax=asciidoc ts=4 sw=4 noet:
/////
