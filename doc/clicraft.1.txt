clicraft(1)
===========

Name
----
clicraft - command-line minecraft server wrapper

Synopsis
--------
'clicraft' [options] <action> [args]

Description
-----------
Clicraft is a command-line wrapper for operation and administration of a
minecraft-compatible server. It is written in linkman:bash[1] and uses
linkman:tmux[1] or linkman:screen[1] to daemonize and communicate with the
server process.

The 'action' is an action to perform on the server, such as starting it,
stopping it, or sending a command to the server console. Actions are
implemented with action scripts, which can be provided by the clicraft package
or written by the user. For more information on writing action scripts, see
linkman:clicraft-actions[5]. The actions that ship with a default clicraft
install are described below.

Options
-------

*-c*, *--config*=<config>::
	Use 'config' as the configuration directory. For other methods of setting
	this directory, see linkman:clicraft.conf[5].

*-h*, *--help*::
	Display this help message and exit.

*-V*, *--version*::
	Output version information and exit.

*-x*, *--xtrace*::
	Print all expanded bash commands run by 'action' to stdout. This is
	accomplished by
	setting bash's +xtrace+ option, and is mainly useful for debugging actions
	scripts. See linkman:clicraft-actions[5] for more information on action
	scripts.
+
If this option is passed multiple times, +xtrace+ is set as soon as the second
option is encountered, which can be useful for debugging clicraft itself.

Actions
-------

*cmd* [-v|--verbose] [-q|--quiet] <command>::
	Sends 'command' to the server console. If clicraft recognizes 'command',
	it will wait until the command finishes or +CMD_TIMEOUT+ seconds, whichever
	comes first, before returning. Any leading occurences of +CMD_LSTRIP+ are
	removed from the beginning of 'command' before being sent to the server
	console.
+
With +-v+ or +--verbose+, print +SERVER_LOG+ to stdout. If clicraft recognizes
the command, it will attempt to print until the command finishes. Otherwise,
it will print for +CMD_TIMEOUT+ seconds.
+
With +-q+ or +--quiet+, suppress +-v+ output.
+
See linkman:clicraft.conf[5] for a description of the +CMD_TIMEOUT+,
+CMD_LSTRIP+, or +SERVER_LOG+ options.

*console*::
	Attach to the server console. This places you in the multiplexer shell
	session that the server is running in. All normal multiplexer key-bindings
	(like `Ctrl-b d` or `Ctrl-a d` to detach) should work.

*dl* [version]::
	Downloads version 'version' of the server jar file. If 'version' is
	+release+ or +snapshot+, the latest release or snapshot version is used.
	If no 'version' is supplied on the command line, use `SERVER_VERSION`
	instead.
+
The jar file is downloaded from `SERVER_URL` and saved to location
`SERVER_JAR` using `DOWNLOAD_COMMAND`. Any instances of the string +%v+ in
`DOWNLOAD_COMMAND` are substituted with 'version'.
+
If `SERVER_JAR` already
exists, it is backed up to `SERVER_JAR.ccback` before being overwritten, and
restored from `SERVER_JAR.ccback` if the download fails.
+
For information regarding `SERVER_VERSION`, `SERVER_URL`, `SERVER_JAR`, and
`DOWNLOAD_COMMAND`. see linkman:clicraft.conf[5].

*edit* [file|action]::
	Edit 'file' in the server directory.
+
If 'file' does not exist and has a .dat extension, and if linkman:vinbt[1]
is installed,
edit the first file of that name found anywhere within the world directory
using vinbt.
+
Otherwise,
edit the action script for 'action' instead. When editing a new action or
overriding a system action, clicraft will create a new user action using one
of these templates:
+
* +$CLICRAFT_CONFIG/action.d/action.sh.example+
* +$CLICRAFT_CONFIG/action.d/action-override.sh.example+

+
See linkman:clicraft.conf[5] for a description of +$CLICRAFT_CONFIG+.
+
When no 'file' or 'action' is present, edit linkman:clicraft.conf[5].
+
This usage of clicraft launches `EDITOR` to edit files, or linkman:vi[1] if
the `EDITOR` variable is not defined in your environment.

*help* [action]::
	Displays usage information for 'action'. If no 'action' is given, clicraft
	usage is displayed instead.

*redb* [operation] [args]::
	Manipulate the regex database. Exact usage depends on 'operation':
+
*redb* lookup <key>:::
	Prints the regex for 'key' from the regex database. If a regex for 'key'
	does not exist, returns a nonzero exit status.
+
*redb* insert <key> <value>:::
	Inserts a new 'key' and 'value' into the regex database. If a regex for
	'key' already exists, returns a nonzero exit status.
+
*redb* update <key> <value>:::
	Changes the regex for 'key' to 'value' in the regex database. If a regex
	for 'key' does not exist, returns a nonzero exit status.
+
*redb* delete <key>:::
	Deletes the regex for 'key' from the regex database. If a regex for 'key'
	does not exist, returns a nonzero exit status.

+
If no 'operation' or 'args' are supplied, they are read from stdin.

*restart*::
	Restarts the server.

*start*::
	Starts the server.

*status*::
	Reports on whether the server is running or not. If the server
	is not running, returns a nonzero exit status.

*stop*::
	Stops the server.

*version*::
	Prints version information.

Examples
--------

clicraft cmd save-off::
	Prepare for a backup by disabling writes to the world files.

clicraft cmd save-on::
	Re-enable writes to the world files.

clicraft edit server.properties::
	Edit the server properties file.

clicraft edit level.dat::
	Edit the server's level.dat file.

Configuration
-------------

See linkman:clicraft.conf[5] for details on configuring clicraft and
linkman:clicraft-actions[5] for writing custom action scripts.

See Also
--------

linkman:clicraft.conf[5], linkman:clicraft-actions[5],
linkman:clicraft-examples[1], linkman:tmux[1], linkman:screen[1],
linkman:vinbt[1]

include::footer.txt[]

/////
vim: set syntax=asciidoc ts=4 sw=4 noet:
/////
