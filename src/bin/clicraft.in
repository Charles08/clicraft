#!/bin/bash

PROG="@PROG@"
VERSION="@VERSION@"
BUGREPORT="@BUGREPORT@"
URL="@URL@"

prefix="@prefix@"
exec_prefix="@exec_prefix@"
BINDIR="@BINDIR@"
EXECDIR="@EXECDIR@"

. "$EXECDIR/bootstrap.sh"

# parse options
while [[ "$1" == -* ]]; do
	case "$1" in
	  --config=*)   CLICRAFT_CONFIG="${1#*=}" ;;
	  -c|--config)  shift; CLICRAFT_CONFIG="$1" ;;
	  -h|--help)    set -- help; break ;;
	  -V|--version) set -- version; break ;;
	  -x|--xtrace)  XTRACE+=1; ((XTRACE>1)) && set -x ;;
	  -[^-]*)       opt="$1"; shift; set -- $(shortopts "$opt") "$@"; continue ;;
	  --)           shift; break ;;
	  *)            err "Unknown option: %s" "$1"; set -- help; break ;;
	esac
	shift
done
unset opt

# find correct config to use
if [[ -n "$CLICRAFT_CONFIG" ]]; then
	if [[ -d "${XDG_CONFIG_HOME-$HOME/.config}/$CLICRAFT_CONFIG" ]]; then
		CLICRAFT_CONFIG="${XDG_CONFIG_HOME-$HOME/.config}/$CLICRAFT_CONFIG"
	elif [[ ! -d "$CLICRAFT_CONFIG" ]]; then
		err "Could not find configuration directory: %s" "$CLICRAFT_CONFIG"
		exit 1
	fi
elif [[ -d "${XDG_CONFIG_HOME-$HOME/.config}/${0##*/}" ]]; then
	CLICRAFT_CONFIG="${XDG_CONFIG_HOME-$HOME/.config}/${0##*/}"
elif [[ -d "${XDG_CONFIG_HOME-$HOME/.config}/clicraft" ]]; then
	CLICRAFT_CONFIG="${XDG_CONFIG_HOME-$HOME/.config}/clicraft"
else
	CLICRAFT_CONFIG="@CONFDIR@"
fi

# canonicalize path
if [[ "$CLICRAFT_CONFIG" != /* ]]; then
	CLICRAFT_CONFIG="$PWD/${CLICRAFT_CONFIG#./}"
fi
export CLICRAFT_CONFIG
CONFDIR="$CLICRAFT_CONFIG"

# copy system config if current config is empty
if [[ -z "$(shopt -s nullglob; echo "$CONFDIR"/*)" ]]; then
	if ! cp -R "@CONFDIR@"/{*.conf,action.d,redb} "$CONFDIR"; then
		warn "Could not create default config in %s" "$CONFDIR"
	fi
fi

if [[ -f "$CONFDIR/clicraft.conf" ]]; then
	. "$CONFDIR/clicraft.conf"
fi

. "$EXECDIR/functions.sh"
. "$EXECDIR/defaults.sh"
. "$EXECDIR/validate.sh"
. "$EXECDIR/$MULTIPLEXER.sh"

# run exithandler function on exit
trap "exithandler" EXIT

# bail if we're root
if [[ "$EUID" == "0" ]]; then
	err "You cannot run this program as %s" "root"
	exit 1
fi

# attempt to create SERVER_DIR
# (failure caught in cd check)
mkdir -p "$SERVER_DIR" 2>/dev/null

# bail if we can't cd
if ! cd "$SERVER_DIR" 2>/dev/null; then
	err "Could not change to directory %s" "$SERVER_DIR"
	exit 1
fi

case "$1" in
  "")
	action help
  ;;
  *)
	if (( XTRACE )); then
		set -x
		unset XTRACE
	fi
	action "$@"
  ;;
esac

