#!/bin/bash

PROG="@PROG@"
VERSION="@VERSION@"
BUGREPORT="@BUGREPORT@"
URL="@URL@"

prefix="@prefix@"
exec_prefix="@exec_prefix@"
BINDIR="@BINDIR@"
CONFDIR="@CONFDIR@"
EXECDIR="@EXECDIR@"

# use user config if the right dir exists
if [[ -d "$XDG_CONFIG_HOME/clicraft" ]]; then
	CONFDIR="$XDG_CONFIG_HOME/clicraft"
elif [[ -d "$HOME/.config/clicraft" ]]; then
	CONFDIR="$HOME/.config/clicraft"
fi

# copy system config to user config if it's empty
conffiles=( $(shopt -s nullglob; echo "$CONFDIR"/*) )
if [[ "${#conffiles[@]}" == 0 ]]; then
	if ! cp -R "@CONFDIR@"/{*.conf,action.d,redb} "$CONFDIR"; then
		warn "Could not create default config in %s" "$CONFDIR"
	fi
fi
unset conffiles

if [[ -f "$CONFDIR/clicraft.conf" ]]; then
	. "$CONFDIR/clicraft.conf"
fi

. "$EXECDIR/functions.sh"
. "$EXECDIR/defaults.sh"
. "$EXECDIR/validate.sh"
. "$EXECDIR/$MULTIPLEXER.sh"

# run exithandler function on exit
trap "exithandler" EXIT

# bail if we're root
if [[ "$EUID" == "0" ]]; then
	err "You cannot run this program as %s" "root"
	exit 1
fi

# attempt to create SERVER_DIR
# (failure caught in cd check)
mkdir -p "$SERVER_DIR" 2>/dev/null

# bail if we can't cd
if ! cd "$SERVER_DIR" 2>/dev/null; then
	err "Could not change to directory %s" "$SERVER_DIR"
	exit 1
fi

case "$1" in
  "--version")
	action version "$@"
  ;;
  "--help"|"-h")
	shift
	action help "$@"
  ;;
  "")
	action help
  ;;
  *)
	action "$@"
  ;;
esac

